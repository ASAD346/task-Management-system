{"ast":null,"code":"var _jsxFileName = \"E:\\\\Github_Repo\\\\task-management-frontend\\\\frontend\\\\src\\\\components\\\\TaskCard.js\";\nimport React from 'react';\nimport './TaskCard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskCard = ({\n  task,\n  onEdit,\n  onDelete,\n  onStatusChange\n}) => {\n  const getStatusColor = status => {\n    switch (status) {\n      case 'completed':\n        return 'status-completed';\n      case 'in-progress':\n        return 'status-in-progress';\n      default:\n        return 'status-pending';\n    }\n  };\n  const formatDate = dateString => {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"task-title\",\n        children: task.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `task-status ${getStatusColor(task.status)}`,\n        children: task.status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"task-description\",\n      children: task.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-meta\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-date\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"meta-label\",\n          children: \"Due:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"meta-value\",\n          children: formatDate(task.dueDate)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), task.creatorId && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-creator\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"meta-label\",\n          children: \"Created by:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"meta-value\",\n          children: task.creatorId.name || 'Unknown'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-actions\",\n      children: [onStatusChange && /*#__PURE__*/_jsxDEV(\"select\", {\n        value: task.status,\n        onChange: e => onStatusChange(task._id, e.target.value),\n        className: \"status-select\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"pending\",\n          children: \"Pending\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"in-progress\",\n          children: \"In Progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"completed\",\n          children: \"Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onEdit(task),\n        className: \"btn-edit\",\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onDelete(task._id),\n        className: \"btn-delete\",\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_c = TaskCard;\nexport default TaskCard;\nvar _c;\n$RefreshReg$(_c, \"TaskCard\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","TaskCard","task","onEdit","onDelete","onStatusChange","getStatusColor","status","formatDate","dateString","Date","toLocaleDateString","year","month","day","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","description","dueDate","creatorId","name","value","onChange","e","_id","target","onClick","_c","$RefreshReg$"],"sources":["E:/Github_Repo/task-management-frontend/frontend/src/components/TaskCard.js"],"sourcesContent":["import React from 'react';\r\nimport './TaskCard.css';\r\n\r\nconst TaskCard = ({ task, onEdit, onDelete, onStatusChange }) => {\r\n  const getStatusColor = (status) => {\r\n    switch (status) {\r\n      case 'completed':\r\n        return 'status-completed';\r\n      case 'in-progress':\r\n        return 'status-in-progress';\r\n      default:\r\n        return 'status-pending';\r\n    }\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    return new Date(dateString).toLocaleDateString('en-US', {\r\n      year: 'numeric',\r\n      month: 'short',\r\n      day: 'numeric'\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"task-card\">\r\n      <div className=\"task-header\">\r\n        <h3 className=\"task-title\">{task.title}</h3>\r\n        <span className={`task-status ${getStatusColor(task.status)}`}>\r\n          {task.status}\r\n        </span>\r\n      </div>\r\n      \r\n      <p className=\"task-description\">{task.description}</p>\r\n      \r\n      <div className=\"task-meta\">\r\n        <div className=\"task-date\">\r\n          <span className=\"meta-label\">Due:</span>\r\n          <span className=\"meta-value\">{formatDate(task.dueDate)}</span>\r\n        </div>\r\n        {task.creatorId && (\r\n          <div className=\"task-creator\">\r\n            <span className=\"meta-label\">Created by:</span>\r\n            <span className=\"meta-value\">{task.creatorId.name || 'Unknown'}</span>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"task-actions\">\r\n        {onStatusChange && (\r\n          <select\r\n            value={task.status}\r\n            onChange={(e) => onStatusChange(task._id, e.target.value)}\r\n            className=\"status-select\"\r\n          >\r\n            <option value=\"pending\">Pending</option>\r\n            <option value=\"in-progress\">In Progress</option>\r\n            <option value=\"completed\">Completed</option>\r\n          </select>\r\n        )}\r\n        <button onClick={() => onEdit(task)} className=\"btn-edit\">\r\n          Edit\r\n        </button>\r\n        <button onClick={() => onDelete(task._id)} className=\"btn-delete\">\r\n          Delete\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskCard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}