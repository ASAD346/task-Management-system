{"ast":null,"code":"import api from './api';\nconst taskService = {\n  getAllTasks: async (filters = {}) => {\n    const params = new URLSearchParams();\n    if (filters.status) params.append('status', filters.status);\n    if (filters.dueDate) params.append('dueDate', filters.dueDate);\n    if (filters.search) params.append('search', filters.search);\n    const response = await api.get(`/tasks?${params.toString()}`);\n    return response.data;\n  },\n  getTask: async id => {\n    const response = await api.get(`/tasks/${id}`);\n    return response.data;\n  },\n  createTask: async taskData => {\n    const response = await api.post('/tasks', taskData);\n    return response.data;\n  },\n  updateTask: async (id, taskData) => {\n    const response = await api.put(`/tasks/${id}`, taskData);\n    return response.data;\n  },\n  deleteTask: async id => {\n    const response = await api.delete(`/tasks/${id}`);\n    return response.data;\n  },\n  getTaskStats: async () => {\n    const response = await api.get('/tasks/stats');\n    return response.data;\n  }\n};\nexport default taskService;","map":{"version":3,"names":["api","taskService","getAllTasks","filters","params","URLSearchParams","status","append","dueDate","search","response","get","toString","data","getTask","id","createTask","taskData","post","updateTask","put","deleteTask","delete","getTaskStats"],"sources":["E:/Github_Repo/task-management-frontend/frontend/src/services/taskService.js"],"sourcesContent":["import api from './api';\r\n\r\nconst taskService = {\r\n  getAllTasks: async (filters = {}) => {\r\n    const params = new URLSearchParams();\r\n    if (filters.status) params.append('status', filters.status);\r\n    if (filters.dueDate) params.append('dueDate', filters.dueDate);\r\n    if (filters.search) params.append('search', filters.search);\r\n    \r\n    const response = await api.get(`/tasks?${params.toString()}`);\r\n    return response.data;\r\n  },\r\n\r\n  getTask: async (id) => {\r\n    const response = await api.get(`/tasks/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  createTask: async (taskData) => {\r\n    const response = await api.post('/tasks', taskData);\r\n    return response.data;\r\n  },\r\n\r\n  updateTask: async (id, taskData) => {\r\n    const response = await api.put(`/tasks/${id}`, taskData);\r\n    return response.data;\r\n  },\r\n\r\n  deleteTask: async (id) => {\r\n    const response = await api.delete(`/tasks/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  getTaskStats: async () => {\r\n    const response = await api.get('/tasks/stats');\r\n    return response.data;\r\n  }\r\n};\r\n\r\nexport default taskService;\r\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;AAEvB,MAAMC,WAAW,GAAG;EAClBC,WAAW,EAAE,MAAAA,CAAOC,OAAO,GAAG,CAAC,CAAC,KAAK;IACnC,MAAMC,MAAM,GAAG,IAAIC,eAAe,CAAC,CAAC;IACpC,IAAIF,OAAO,CAACG,MAAM,EAAEF,MAAM,CAACG,MAAM,CAAC,QAAQ,EAAEJ,OAAO,CAACG,MAAM,CAAC;IAC3D,IAAIH,OAAO,CAACK,OAAO,EAAEJ,MAAM,CAACG,MAAM,CAAC,SAAS,EAAEJ,OAAO,CAACK,OAAO,CAAC;IAC9D,IAAIL,OAAO,CAACM,MAAM,EAAEL,MAAM,CAACG,MAAM,CAAC,QAAQ,EAAEJ,OAAO,CAACM,MAAM,CAAC;IAE3D,MAAMC,QAAQ,GAAG,MAAMV,GAAG,CAACW,GAAG,CAAC,UAAUP,MAAM,CAACQ,QAAQ,CAAC,CAAC,EAAE,CAAC;IAC7D,OAAOF,QAAQ,CAACG,IAAI;EACtB,CAAC;EAEDC,OAAO,EAAE,MAAOC,EAAE,IAAK;IACrB,MAAML,QAAQ,GAAG,MAAMV,GAAG,CAACW,GAAG,CAAC,UAAUI,EAAE,EAAE,CAAC;IAC9C,OAAOL,QAAQ,CAACG,IAAI;EACtB,CAAC;EAEDG,UAAU,EAAE,MAAOC,QAAQ,IAAK;IAC9B,MAAMP,QAAQ,GAAG,MAAMV,GAAG,CAACkB,IAAI,CAAC,QAAQ,EAAED,QAAQ,CAAC;IACnD,OAAOP,QAAQ,CAACG,IAAI;EACtB,CAAC;EAEDM,UAAU,EAAE,MAAAA,CAAOJ,EAAE,EAAEE,QAAQ,KAAK;IAClC,MAAMP,QAAQ,GAAG,MAAMV,GAAG,CAACoB,GAAG,CAAC,UAAUL,EAAE,EAAE,EAAEE,QAAQ,CAAC;IACxD,OAAOP,QAAQ,CAACG,IAAI;EACtB,CAAC;EAEDQ,UAAU,EAAE,MAAON,EAAE,IAAK;IACxB,MAAML,QAAQ,GAAG,MAAMV,GAAG,CAACsB,MAAM,CAAC,UAAUP,EAAE,EAAE,CAAC;IACjD,OAAOL,QAAQ,CAACG,IAAI;EACtB,CAAC;EAEDU,YAAY,EAAE,MAAAA,CAAA,KAAY;IACxB,MAAMb,QAAQ,GAAG,MAAMV,GAAG,CAACW,GAAG,CAAC,cAAc,CAAC;IAC9C,OAAOD,QAAQ,CAACG,IAAI;EACtB;AACF,CAAC;AAED,eAAeZ,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}